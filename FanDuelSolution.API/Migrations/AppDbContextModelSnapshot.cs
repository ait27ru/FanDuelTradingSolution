// <auto-generated />
using FanDuelSolution.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FanDuelSolution.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("FanDuelSolution.API.Entities.DepthChart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PositionDepth")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PositionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("PositionId");

                    b.HasIndex("TeamId");

                    b.ToTable("DepthCharts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PlayerId = 1,
                            PositionDepth = 1,
                            PositionId = 1,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            PlayerId = 8,
                            PositionDepth = 2,
                            PositionId = 1,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 3,
                            PlayerId = 10,
                            PositionDepth = 1,
                            PositionId = 2,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 4,
                            PlayerId = 11,
                            PositionDepth = 2,
                            PositionId = 2,
                            TeamId = 1
                        });
                });

            modelBuilder.Entity("FanDuelSolution.API.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<byte>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Mike",
                            LastName = "Evans",
                            Number = (byte)13
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Tyler",
                            LastName = "Johnson",
                            Number = (byte)18
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Donovan",
                            LastName = "Smith",
                            Number = (byte)76
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Ali",
                            LastName = "Marpet",
                            Number = (byte)74
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Ryan",
                            LastName = "Jensen",
                            Number = (byte)66
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Alex",
                            LastName = "Cappa",
                            Number = (byte)65
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Tristan",
                            LastName = "Wirfs",
                            Number = (byte)78
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Jaelon",
                            LastName = "Darden",
                            Number = (byte)1
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Scott",
                            LastName = "Miller",
                            Number = (byte)10
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Breshad",
                            LastName = "Perriman",
                            Number = (byte)16
                        },
                        new
                        {
                            Id = 11,
                            FirstName = "Cyril",
                            LastName = "Grayson",
                            Number = (byte)15
                        });
                });

            modelBuilder.Entity("FanDuelSolution.API.Entities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("PositionType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "LWR",
                            PositionType = "Offense"
                        },
                        new
                        {
                            Id = 2,
                            Name = "RWR",
                            PositionType = "Offense"
                        },
                        new
                        {
                            Id = 3,
                            Name = "LT",
                            PositionType = "Offense"
                        },
                        new
                        {
                            Id = 4,
                            Name = "LG",
                            PositionType = "Offense"
                        },
                        new
                        {
                            Id = 5,
                            Name = "C",
                            PositionType = "Offense"
                        },
                        new
                        {
                            Id = 6,
                            Name = "RG",
                            PositionType = "Offense"
                        },
                        new
                        {
                            Id = 7,
                            Name = "RT",
                            PositionType = "Offense"
                        },
                        new
                        {
                            Id = 8,
                            Name = "TE",
                            PositionType = "Offense"
                        },
                        new
                        {
                            Id = 9,
                            Name = "QB",
                            PositionType = "Offense"
                        },
                        new
                        {
                            Id = 10,
                            Name = "RB",
                            PositionType = "Offense"
                        },
                        new
                        {
                            Id = 11,
                            Name = "DE",
                            PositionType = "Defense"
                        },
                        new
                        {
                            Id = 12,
                            Name = "NT",
                            PositionType = "Defense"
                        },
                        new
                        {
                            Id = 13,
                            Name = "OLB",
                            PositionType = "Defense"
                        },
                        new
                        {
                            Id = 14,
                            Name = "ILB",
                            PositionType = "Defense"
                        },
                        new
                        {
                            Id = 15,
                            Name = "CB",
                            PositionType = "Defense"
                        },
                        new
                        {
                            Id = 16,
                            Name = "SS",
                            PositionType = "Defense"
                        },
                        new
                        {
                            Id = 17,
                            Name = "FS",
                            PositionType = "Defense"
                        },
                        new
                        {
                            Id = 18,
                            Name = "RCB",
                            PositionType = "Defense"
                        },
                        new
                        {
                            Id = 19,
                            Name = "PT",
                            PositionType = "Special Teams"
                        },
                        new
                        {
                            Id = 20,
                            Name = "PK",
                            PositionType = "Special Teams"
                        },
                        new
                        {
                            Id = 21,
                            Name = "LS",
                            PositionType = "Special Teams"
                        },
                        new
                        {
                            Id = 22,
                            Name = "H",
                            PositionType = "Special Teams"
                        },
                        new
                        {
                            Id = 23,
                            Name = "KO",
                            PositionType = "Special Teams"
                        },
                        new
                        {
                            Id = 24,
                            Name = "PR",
                            PositionType = "Special Teams"
                        },
                        new
                        {
                            Id = 25,
                            Name = "KR",
                            PositionType = "Special Teams"
                        },
                        new
                        {
                            Id = 26,
                            Name = "RES",
                            PositionType = "Reserves"
                        },
                        new
                        {
                            Id = 27,
                            Name = "FUT",
                            PositionType = "Reserves"
                        });
                });

            modelBuilder.Entity("FanDuelSolution.API.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Abbreviation")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Team");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "TBB",
                            Name = "Tampa Bay Buccaneers"
                        });
                });

            modelBuilder.Entity("FanDuelSolution.API.Entities.DepthChart", b =>
                {
                    b.HasOne("FanDuelSolution.API.Entities.Player", "Player")
                        .WithMany("DepthCharts")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FanDuelSolution.API.Entities.Position", "Position")
                        .WithMany("DepthCharts")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FanDuelSolution.API.Entities.Team", "Team")
                        .WithMany("DepthCharts")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Position");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("FanDuelSolution.API.Entities.Player", b =>
                {
                    b.Navigation("DepthCharts");
                });

            modelBuilder.Entity("FanDuelSolution.API.Entities.Position", b =>
                {
                    b.Navigation("DepthCharts");
                });

            modelBuilder.Entity("FanDuelSolution.API.Entities.Team", b =>
                {
                    b.Navigation("DepthCharts");
                });
#pragma warning restore 612, 618
        }
    }
}
